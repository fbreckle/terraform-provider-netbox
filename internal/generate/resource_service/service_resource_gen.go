// Code generated by terraform-plugin-framework-generator DO NOT EDIT.

package resource_service

import (
	"context"
	"github.com/hashicorp/terraform-plugin-framework-validators/stringvalidator"
	"github.com/hashicorp/terraform-plugin-framework/schema/validator"
	"github.com/hashicorp/terraform-plugin-framework/types"

	"github.com/hashicorp/terraform-plugin-framework/resource/schema"
)

func ServiceResourceSchema(ctx context.Context) schema.Schema {
	return schema.Schema{
		Attributes: map[string]schema.Attribute{
			"comments": schema.StringAttribute{
				Optional: true,
				Computed: true,
			},
			"created": schema.StringAttribute{
				Computed: true,
			},
			"description": schema.StringAttribute{
				Optional: true,
				Computed: true,
				Validators: []validator.String{
					stringvalidator.LengthAtMost(200),
				},
			},
			"device": schema.Int64Attribute{
				Optional: true,
				Computed: true,
			},
			"display": schema.StringAttribute{
				Computed: true,
			},
			"id": schema.Int64Attribute{
				Computed:            true,
				Description:         "A unique integer value identifying this service.",
				MarkdownDescription: "A unique integer value identifying this service.",
			},
			"ipaddresses": schema.ListAttribute{
				ElementType:         types.Int64Type,
				Optional:            true,
				Computed:            true,
				Description:         "The specific IP addresses (if any) to which this service is bound",
				MarkdownDescription: "The specific IP addresses (if any) to which this service is bound",
			},
			"last_updated": schema.StringAttribute{
				Computed: true,
			},
			"name": schema.StringAttribute{
				Required: true,
				Validators: []validator.String{
					stringvalidator.LengthBetween(1, 100),
				},
			},
			"ports": schema.ListAttribute{
				ElementType: types.Int64Type,
				Required:    true,
			},
			"protocol": schema.StringAttribute{
				Required:            true,
				Description:         "* `tcp` - TCP\n* `udp` - UDP\n* `sctp` - SCTP",
				MarkdownDescription: "* `tcp` - TCP\n* `udp` - UDP\n* `sctp` - SCTP",
				Validators: []validator.String{
					stringvalidator.OneOf(
						"tcp",
						"udp",
						"sctp",
					),
				},
			},
			"url": schema.StringAttribute{
				Computed: true,
			},
			"virtual_machine": schema.Int64Attribute{
				Optional: true,
				Computed: true,
			},
		},
	}
}

type ServiceModel struct {
	Comments       types.String `tfsdk:"comments"`
	Created        types.String `tfsdk:"created"`
	Description    types.String `tfsdk:"description"`
	Device         types.Int64  `tfsdk:"device"`
	Display        types.String `tfsdk:"display"`
	Id             types.Int64  `tfsdk:"id"`
	Ipaddresses    types.List   `tfsdk:"ipaddresses"`
	LastUpdated    types.String `tfsdk:"last_updated"`
	Name           types.String `tfsdk:"name"`
	Ports          types.List   `tfsdk:"ports"`
	Protocol       types.String `tfsdk:"protocol"`
	Url            types.String `tfsdk:"url"`
	VirtualMachine types.Int64  `tfsdk:"virtual_machine"`
}
